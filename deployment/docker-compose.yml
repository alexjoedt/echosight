
services:
  postgres:
    image: postgres:14.10
    container_name: postgres
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "pg_isready", "--username=root" ]
      interval: 5s
      timeout: 3s
      retries: 3
    ports:
      - 5432:5432
    environment:
      LANG: "en_US.utf8"
      POSTGRES_USER: root 
      POSTGRES_PASSWORD: root
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - database_net
  
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    network_mode: "host"
    environment:
      - PGADMIN_DEFAULT_EMAIL=dummy@example.com
      - PGADMIN_DEFAULT_PASSWORD=root
      - PGADMIN_LISTEN_PORT=9001
      - PGADMIN_CONFIG_MAX_LOGIN_ATTEMPTS=5
      - PGADMIN_LISTEN_ADDRESS=0.0.0.0
      - PGADMIN_DISABLE_POSTFIX=true
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - /etc/localtime:/etc/localtime:ro

  redis:
      image: redis:7
      container_name: redis
      command: redis-server /etc/redis/redis.conf
      ports:
        - 6379:6379
      volumes:
        - redis_data:/data
        - ./redis.conf:/etc/redis/redis.conf
      environment:
        - REDIS_REPLICATION_MODE=master
      networks:
        - database_net

  redis-insights:
    container_name: redis-insights
    image: redislabs/redisinsight:latest
    depends_on:
      - redis
    ports:
      - 8001:8001
    volumes:
      - redis_insights:/db
    networks:
      - database_net


  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    volumes:
      - influxdb_data:/var/lib/influxdb2
      - influxdb_etc:/etc/influxdb2
    ports:
      - 8086:8086
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: root
      DOCKER_INFLUXDB_INIT_PASSWORD: root
      DOCKER_INFLUXDB_INIT_ORG: echosight
      DOCKER_INFLUXDB_INIT_BUCKET: metrics
      DOCKER_INFLUXDB_INIT_RETENTION: 30d
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: my-super-secret-auth-token

volumes:
  influxdb_data:
    driver: local
  influxdb_etc:
    driver: local
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  redis_data:
    driver: local
  redis_insights:
    driver: local

networks:
  database_net:
